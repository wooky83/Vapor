name: test
on: { pull_request: {} }

jobs:
  getcidata:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.output.outputs.environments }}
    steps:
      - id: output
        run: |
          envblob="$(curl -fsSL https://raw.githubusercontent.com/vapor/ci/main/pr-environments.json | jq -cMj '.')"
          echo "::set-output name=environments::${envblob}"
    
  test-providers:
    needs: getcidata
    strategy:
      fail-fast: false
      matrix:
        provider:
          - vapor/jwt
          - vapor/fluent
          - vapor/leaf
          - vapor/queues
          - vapor/apns
    runs-on: ubuntu-latest
    container: swift:5.3-focal
    steps: 
      - name: Check out Vapor
        uses: actions/checkout@v2
        with:
          path: vapor
      - name: Check out provider
        uses: actions/checkout@v2
        with: 
          repository: ${{ matrix.provider }}
          path: provider
      - name: Use local Vapor
        run: swift package --package-path ./provider edit vapor --path ./vapor
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        working-directory: provider
        
  test-vapor:
    needs: getcidata
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.getcidata.outputs.environments) }}
    runs-on: ${{ matrix.env.os }}
    container: ${{ matrix.env.image }}
    steps: 
      - name: Select toolchain
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: ${{ matrix.env.toolchain }}
        if: ${{ matrix.env.toolchain != '' }}
      - name: Check out Vapor
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        timeout-minutes: 30
        run: swift test --enable-test-discovery --sanitize=thread
